RAWR - Rapid Assessment of Web Resources
Written by: Adam Byers (al14s)

Romans 5:6-8


DISCLAIMER:
    This is only for testing purposes and can only be used where strict consent has been given. Do not use
this for illegal purposes period.                                                   
                                                                            
Any modifications, changes, or alterations to this application is acceptable, however, any public releases utilizing 
this code must be approved by its creator. Check the LICENSE file for more information.

RAWR is designed to make the process of web enumeration easy and efficient by providing pertinent information in usable formats.
It uses NMap(live or from file), Metasploit, Qualys, Nexpose, or Nessus scan data to target web services for enumeration, then visits
each host on each port with an identified web service and gathers as much data as possible.  



REQUIREMENTS:

    nmap               - at least 6.00 - required for SSL strength assessment
    phantomJS          - tested with 1.9.1 - if not installed, can be downloaded into data/ folder during --check-install
    python-lxml        - for quick file parsing
    graphviz           - (optional) for creating site diagrams
    python-pygraphviz  - (optional) for creating site diagrams

    'requests' has been ported to the lib/ folder


INSTALLATION:

    ' ./rawr.py --check-install '


OS COMPATIBILITY:

    Backtrack 6 / NMap 6.01
    Ubuntu 12.04LTS / NMap 5.21 (nmap caused errors due to absence of ssl-enum-ciphers.nse)


BROWSER COMPATIBILITY:

    Supported - Firefox (tested w/ 23)
    Tested/working on - Safari (tested w/ 5), Chrome (tested w/ 22), IE (tested w/ 7-9) 


FILE INPUT FORMATS:

    NMap       - XML
    Nessus     - XML v2   (requires "Service Detection" plugin)
    Metasploit - CSV
    Qualys     - Port Services Report CSV
    Qualys     - Asset Search XML (requires QIDs 86000,86001,86002)
    Nexpose   - Simple XML, XML+v2  *parse v1 and v2 w/ the same setup*
    OpenVAS    - XML

    + any CSV with at least the following fields: 
			host,port,name,info  with values (ip, port, http|https|ssl|tls|www, service info)
			headers must be on first row of doc
			use --parsertest to output the first 3 targets and exit (to aide in parser dev)